=============MVC (module, view, controller) architecture in a nutshell=============
 
 Module layer: application's data and business logic
    
 Controller layer: application's request, interact with modules and send back responses

 View layer: only necessary if we have a grafical interface, in other words, a server-side rendered website. It's basically the template shown

Application logic: 
 -Code focused on the app's implementation, which makes it work
 -Concerned about managing requests and responses
 -A bridge for module-view layers

Business logic:
 -Code that is focused on solving business problem we set out to solve
 -Focused on the business needs itself.

Fat models/thin controllers philosofy: Put all logic in the models and keep controllers as simple as possible

============= async await =============

const variable = async (callback) => {
    try {
        const variable = await function
    } catch (err) {
        error handling
    }
}

============= FILTERING QUERY =============

const Tour = mongoose.model("Tour", tourSchema);

// is the function made to access the tour collection in mongoDB

============= =============

Tour.find();

// is the method that finds the data in the collection (without parameters)

============= =============

Tour.find(req.query);

// is the easiest filtering, getting the data that matches the parameters in the query, like "?difficulty=easy&duration=5", but the problem is that other parameters might be in the query, like "sort" or "page" or "limit", for example, and we don't want those.

============= =============

const queryObj = {...req.query}
Tour.find(queryObj);

// the "{...req.query}" is a way of creating a hard copy of the query without interacting with it actually

============= =============

const excludedFields = ['any fields that you wanna exclude from the filtering']
excludedFields.forEach(el => delete queryObj[el]);

// const excludedFields = [] --- specifies what fields must be excluded from the query

   excludedFields.forEach(...) --- deletes all the elements in excludedFields (the array created) from the queryObj (a copy from the original query). This way we filter without changing the original query.

